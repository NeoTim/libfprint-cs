{
  "api/Unosquare.Labs.LibFprint.FingerprintDevice.html": {
    "href": "api/Unosquare.Labs.LibFprint.FingerprintDevice.html",
    "title": "Class FingerprintDevice | libfprint-cs",
    "keywords": "Class FingerprintDevice Provides properties and methods to control and access fingerprint device finctionality. Use the FingerPrintDeviceManager class to discover and open instances of this class. Please note this class makes use of unmanaged resources. Dispose accordingly. Inheritance System.Object FingerprintDevice Implements System.IDisposable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.LibFprint Syntax public class FingerprintDevice : IDisposable Properties DriverFullName Gets the full name of the driver. Declaration public string DriverFullName { get; } Property Value Type Description System.String The full name of the driver. DriverName Gets the name of the driver. Declaration public string DriverName { get; } Property Value Type Description System.String The name of the driver. EnrollStagesCount Gets the enroll stages count for this device. Declaration public int EnrollStagesCount { get; protected set; } Property Value Type Description System.Int32 The enroll stages count. ImageHeight Gets or sets the height of the image. Declaration public int ImageHeight { get; protected set; } Property Value Type Description System.Int32 The height of the image. ImageWidth Gets or sets the width of the image. Declaration public int ImageWidth { get; protected set; } Property Value Type Description System.Int32 The width of the image. IsOpen Gets a value indicating whether this device is open and ready for operation. Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean true if this instance is open; otherwise, false . SupportsIdentification Gets or sets a value indicating whether this device supports identification. Declaration public bool SupportsIdentification { get; protected set; } Property Value Type Description System.Boolean true if [supports identification]; otherwise, false . SupportsImaging Gets or sets a value indicating whether this device supports imaging. Declaration public bool SupportsImaging { get; protected set; } Property Value Type Description System.Boolean true if [supports imaging]; otherwise, false . SupportsVariableImagingDimensions Gets or sets a value indicating whether this device supports variable imaging dimensions. Declaration public bool SupportsVariableImagingDimensions { get; protected set; } Property Value Type Description System.Boolean true if [supports variable imaging dimensions]; otherwise, false . Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool releaseOnlyManaged) Parameters Type Name Description System.Boolean releaseOnlyManaged true to release both managed and unmanaged resources; false to release only unmanaged resources. EnrollFingerprint() Enrolls the fingerprint. Declaration public EnrollStageResult EnrollFingerprint() Returns Type Description EnrollStageResult EnrollFingerprint(String) Enrolls the fingerprint. Declaration public EnrollStageResult EnrollFingerprint(string pgmFilePath) Parameters Type Name Description System.String pgmFilePath The PGM file path. Returns Type Description EnrollStageResult Finalize() Finalizes an instance of the FingerprintDeviceManager class. Declaration protected void Finalize() IdentifyFingerprint(FingerprintGallery) Identifies the fingerprint. Declaration public string IdentifyFingerprint(FingerprintGallery gallery) Parameters Type Name Description FingerprintGallery gallery The gallery. Returns Type Description System.String IdentifyFingerprint(FingerprintGallery, String) Identifies the fingerprint. Declaration public string IdentifyFingerprint(FingerprintGallery gallery, string pgmFilePath) Parameters Type Name Description FingerprintGallery gallery The gallery. System.String pgmFilePath The PGM file path. Returns Type Description System.String Open() Opens this fingerprint scanning device. This method has to be called before operating the device Declaration public void Open() Exceptions Type Condition System.InvalidOperationException Could not open device. Reset() Resets the device by closing and re-opening it. Declaration public void Reset() VerifyFingerprint(String, FingerprintGallery) Verifies the fingerprint. Declaration public bool VerifyFingerprint(string galleryKey, FingerprintGallery gallery) Parameters Type Name Description System.String galleryKey The gallery key. FingerprintGallery gallery The gallery. Returns Type Description System.Boolean VerifyFingerprint(String, FingerprintGallery, String) Verifies the fingerprint. Declaration public bool VerifyFingerprint(string galleryKey, FingerprintGallery gallery, string pgmFilePath) Parameters Type Name Description System.String galleryKey The gallery key. FingerprintGallery gallery The gallery. System.String pgmFilePath The PGM file path. Returns Type Description System.Boolean VerifyFingerprint(EnrollStageResult) Verifies the fingerprint. Declaration public bool VerifyFingerprint(EnrollStageResult enrollResult) Parameters Type Name Description EnrollStageResult enrollResult The enroll result. Returns Type Description System.Boolean VerifyFingerprint(EnrollStageResult, String) Verifies the fingerprint. Declaration public bool VerifyFingerprint(EnrollStageResult enrollResult, string pgmFilePath) Parameters Type Name Description EnrollStageResult enrollResult The enroll result. System.String pgmFilePath The PGM file path. Returns Type Description System.Boolean Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.LibFprint.FingerprintGallery.html": {
    "href": "api/Unosquare.Labs.LibFprint.FingerprintGallery.html",
    "title": "Class FingerprintGallery | libfprint-cs",
    "keywords": "Class FingerprintGallery Provides means to keeping a fingerprint database. A fingerprint gallery is needed for fingerprint identification. Fingerprints can be loaded from byte arrays or enrollment results. Inheritance System.Object FingerprintGallery Implements System.IDisposable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.LibFprint Syntax public class FingerprintGallery : IDisposable Constructors FingerprintGallery() Initializes a new instance of the FingerprintGallery class. Declaration public FingerprintGallery() Properties Item[Int32] Gets the key with the specified offset. Declaration public string this[int offset] { get; } Parameters Type Name Description System.Int32 offset The offset. Property Value Type Description System.String The System.String . Methods Add(String, Byte[]) Adds the specified fingerprint data and associates it with the specified key. Declaration public void Add(string key, byte[] fingerprintData) Parameters Type Name Description System.String key The key. System.Byte [] fingerprintData The fingerprint data. Add(String, EnrollStageResult) Adds the specified fingerprint data and associates it with the specified key. Declaration public void Add(string key, EnrollStageResult enrollResult) Parameters Type Name Description System.String key The key. EnrollStageResult enrollResult The enroll result. AddRange(IEnumerable<Tuple<String, Byte[]>>) Adds the specified fingerprint key-value pairs to the gallery. This is the preferred method for bulk loading as it does not rebuild the database for every fingerprint. Declaration public void AddRange(IEnumerable<Tuple<string, byte[]>> fingerprints) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Tuple < System.String , System.Byte []>> fingerprints The fingerprints. AllKeys() Gets all the keys registered in this gallery. Declaration public string[] AllKeys() Returns Type Description System.String [] Dispose() Declaration public void Dispose() Dispose(Boolean) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool releaseOnlyManaged) Parameters Type Name Description System.Boolean releaseOnlyManaged true to release both managed and unmanaged resources; false to release only unmanaged resources. Finalize() Declaration protected void Finalize() HasKey(String) Determines whether the gallery contains the specified keys. Declaration public bool HasKey(string key) Parameters Type Name Description System.String key The key. Returns Type Description System.Boolean Remove(String) Removes a fingerprint from the gallery given its key Declaration public void Remove(string key) Parameters Type Name Description System.String key The key. Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "README.html": {
    "href": "README.html",
    "title": "libfprint-cs | libfprint-cs",
    "keywords": "libfprint-cs The long-awaited C# (.net/mono) wrapper for the great fingerprint reader interfacing library libfprint From the libfprint website : libfprint is an open source software library designed to make it easy for application developers to add support for consumer fingerprint readers to their software. This wrapper makes interfacing with your fingerprint reader extremely easy. Simple guidelines Use the FingerprintDeviceManager to discover connected fingerprint devices Use the FingerprintDevice objects provided by the device manager to Enroll, Verify and Identify fingerprints Use the FingerprintGallery to keep a database of fingerprints to match against. You can load the contents of the gallery from files, a database or pretty much any byte array prodiced by the Enroll functionality. Finally, (and optionally) use the PgmFormatReader to turn PGM image files to Bitmaps Have fun! Super quick code example using (var manager = FingerprintDeviceManager.Instance) { manager.Initialize(); using (var gallery = new FingerprintGallery()) { var device = manager.DiscoverDevices().FirstOrDefault(); device.Open(); var enrollResult = device.EnrollFingerprint(\"enroll.pgm\"); if (enrollResult.IsEnrollComplete) { var isVerified = device.VerifyFingerprint(enrollResult, \"verify.pgm\"); if (isVerified) { gallery.Add(\"username_gose_here\", enrollResult); } } var identified = device.IdentifyFingerprint(gallery, \"identify.pgm\"); } } Getting it to run on the Raspberry Pi (Raspbian) Raspbian has a fairly outdated libfprint-dev package (0.4.0). The following script will remove the installed libfprint-dev, install dependencies, pull code from 0.5.1, build it, and install the library. sudo apt-get remove -y libfprint-dev sudo apt-get autoremove -y sudo apt-get install -y libusb-1.0-0-dev sudo apt-get install -y libnss3-dev sudo apt-get install -y libgtk2.0-dev wget http://people.freedesktop.org/~hadess/libfprint-0.5.1.tar.xz tar xf libfprint-0.5.1.tar.xz rm libfprint-0.5.1.tar.xz cd libfprint-0.5.1 ./configure make sudo make install sudo make clean cd .. sudo cp /usr/local/lib/libfprint.so libfprint.so sudo find / -iname \"libfprint.so\" You will also obviously want to install mono for any of the above to work . . . sudo apt-get install mono-complete Futures The identification logic seems to be fairly slow when we start adding many fingerprints. Maybe using thislibrary for imaging and then using something like SourceAFIS for identification would work better... Thanks Thanks to the libfprint developers!"
  },
  "api/Unosquare.Labs.LibFprint.EnrollResult.html": {
    "href": "api/Unosquare.Labs.LibFprint.EnrollResult.html",
    "title": "Enum EnrollResult | libfprint-cs",
    "keywords": "Enum EnrollResult An enumeration that represents enrollment results. Namespace : Unosquare.Labs.LibFprint Syntax public enum EnrollResult Fields Name Description EnrollComplete The enroll complete EnrollFailed The enroll failed EnrollStagePassed The enroll stage passed Retry The retry RetryFingerNotCentered The retry finger not centered RetryRemoveFinger The retry remove finger RetryScanTooShort The retry scan too short Unspecified The unspecified Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.LibFprint.EnrollStageResult.html": {
    "href": "api/Unosquare.Labs.LibFprint.EnrollStageResult.html",
    "title": "Class EnrollStageResult | libfprint-cs",
    "keywords": "Class EnrollStageResult Represents the state of a Fingerprint Enrollment operation Inheritance System.Object EnrollStageResult Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.LibFprint Syntax public class EnrollStageResult Constructors EnrollStageResult(Int32, Byte[]) Initializes a new instance of the EnrollStageResult class. Declaration public EnrollStageResult(int enrollCode, byte[] fingerprintData) Parameters Type Name Description System.Int32 enrollCode The enroll code. System.Byte [] fingerprintData The fingerprint data. Properties FingerprintData Gets the buffer data holding the fingerprint scan. This is what needs to be saved in a database that will later be loased on to a FingerprintGallery object. Declaration public byte[] FingerprintData { get; protected set; } Property Value Type Description System.Byte [] The fingerprint data. IsEnrollComplete Gets a value indicating whether this instance represents an enrollment completion. Declaration public bool IsEnrollComplete { get; } Property Value Type Description System.Boolean true if this instance is enroll complete; otherwise, false . IsEnrollFailure Gets a value indicating whether this instance represents an enrollment failure. Declaration public bool IsEnrollFailure { get; } Property Value Type Description System.Boolean true if this instance is enroll failure; otherwise, false . IsFatalError Gets a value indicating whether the result contains a fatal error. Declaration public bool IsFatalError { get; } Property Value Type Description System.Boolean true if this instance is fatal error; otherwise, false . IsSuccess Gets a value indicating whether the result was a successful scan. Declaration public bool IsSuccess { get; } Property Value Type Description System.Boolean true if this instance is success; otherwise, false . RequiresNewCall Gets a value indicating whether a new call to the Enroll Fingerprint method is required to advance or to retry. Declaration public bool RequiresNewCall { get; } Property Value Type Description System.Boolean true if [requires new call]; otherwise, false . RequiresRetry Gets a value indicating whether the enrollment requires retry. Declaration public bool RequiresRetry { get; } Property Value Type Description System.Boolean true if [requires retry]; otherwise, false . Result Gets or sets the friendly result code. Declaration public EnrollResult Result { get; protected set; } Property Value Type Description EnrollResult The result. ResultCode Gets or sets the raw result code. Declaration public int ResultCode { get; protected set; } Property Value Type Description System.Int32 The result code. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.LibFprint.FingerprintDeviceManager.html": {
    "href": "api/Unosquare.Labs.LibFprint.FingerprintDeviceManager.html",
    "title": "Class FingerprintDeviceManager | libfprint-cs",
    "keywords": "Class FingerprintDeviceManager Singleton class to Initialize the fprint library and perform fingerprint reader device discovery. Access properties and methods via the Instance Property. Inheritance System.Object FingerprintDeviceManager Implements System.IDisposable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.LibFprint Syntax public sealed class FingerprintDeviceManager : IDisposable Properties Instance Gets the single instance of the Fingerprint Device Manager Declaration public static FingerprintDeviceManager Instance { get; } Property Value Type Description FingerprintDeviceManager The instance. IsInitialized Gets or sets a value indicating whether the library is initialized. Declaration public bool IsInitialized { get; } Property Value Type Description System.Boolean true if this instance is initialized; otherwise, false . Methods DiscoverDevices() Performs a discovery of currently connected Fingerprint Scanner devices Use the resulting array of FingerPrintDevice to start operating the devices. Declaration public FingerprintDevice[] DiscoverDevices() Returns Type Description FingerprintDevice [] Dispose() Declaration public void Dispose() Finalize() Finalizes an instance of the FingerprintDeviceManager class. Declaration protected void Finalize() Initialize(Int32) Initializes the fprint library with the given debug level. The dibug level is not documented but 3 seems to have some level of verbosity. Declaration public void Initialize(int debugLevel = 0) Parameters Type Name Description System.Int32 debugLevel The debug level. Exceptions Type Condition System.Exception Implements System.IDisposable Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.LibFprint.PgmFormatReader.html": {
    "href": "api/Unosquare.Labs.LibFprint.PgmFormatReader.html",
    "title": "Class PgmFormatReader | libfprint-cs",
    "keywords": "Class PgmFormatReader Provides utility methods to read PGM files into Bitmap objects. Inheritance System.Object PgmFormatReader Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.Labs.LibFprint Syntax public static class PgmFormatReader Methods Read(Byte[]) Reads the specified PGM buffer and returns a Bitmap. Declaration public static Bitmap Read(byte[] buffer) Parameters Type Name Description System.Byte [] buffer The buffer. Returns Type Description Bitmap Read(Stream) Reads the specified PGM stream and returns a Bitmap. Declaration public static Bitmap Read(Stream stream) Parameters Type Name Description System.IO.Stream stream The stream. Returns Type Description Bitmap Exceptions Type Condition System.BadImageFormatException PGM Magic Number not found. Read(String) Reads the specified PGM file and returns a Bitmap. Declaration public static Bitmap Read(string path) Parameters Type Name Description System.String path The path. Returns Type Description Bitmap Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  },
  "api/Unosquare.Labs.LibFprint.html": {
    "href": "api/Unosquare.Labs.LibFprint.html",
    "title": "Namespace Unosquare.Labs.LibFprint | libfprint-cs",
    "keywords": "Namespace Unosquare.Labs.LibFprint Classes EnrollStageResult Represents the state of a Fingerprint Enrollment operation FingerprintDevice Provides properties and methods to control and access fingerprint device finctionality. Use the FingerPrintDeviceManager class to discover and open instances of this class. Please note this class makes use of unmanaged resources. Dispose accordingly. FingerprintDeviceManager Singleton class to Initialize the fprint library and perform fingerprint reader device discovery. Access properties and methods via the Instance Property. FingerprintGallery Provides means to keeping a fingerprint database. A fingerprint gallery is needed for fingerprint identification. Fingerprints can be loaded from byte arrays or enrollment results. PgmFormatReader Provides utility methods to read PGM files into Bitmap objects. Enums EnrollResult An enumeration that represents enrollment results. Comments /** * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS. * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables*/ /* var disqus_config = function () { this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable }; */ (function() { // DON'T EDIT BELOW THIS LINE var d = document, s = d.createElement('script'); s.src = 'https://unolabs.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })(); Please enable JavaScript to view the comments powered by Disqus."
  }
}